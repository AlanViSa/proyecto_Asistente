Metadata-Version: 2.4
Name: salon-assistant
Version: 1.0.0
Summary: Virtual Assistant for Beauty Salon
Author-email: Your Name <your.email@example.com>
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# Asistente Virtual para Salón de Belleza

Sistema de asistente virtual inteligente para la gestión de citas y atención al cliente en salones de belleza.

## Características

- Gestión automática de citas vía WhatsApp
- Respuesta automática a mensajes de WhatsApp
- Sistema de atención telefónica automatizada
- Interfaz de administración para el negocio
- Procesamiento de lenguaje natural para comunicación natural
- Sistema de gestión de base de datos para clientes y citas

## Requisitos del Sistema

- Python 3.11 o superior
- PostgreSQL 13 o superior
- Cuenta de Twilio para WhatsApp Business y telefonía
- Cuenta de OpenAI para procesamiento de lenguaje natural

## Instalación

1. Clonar el repositorio:
```bash
git clone [url-del-repositorio]
```

2. Crear un entorno virtual:
```bash
python -m venv venv
```

3. Activar el entorno virtual:
- Windows:
```bash
.\venv\Scripts\activate
```
- Linux/Mac:
```bash
source venv/bin/activate
```

4. Instalar dependencias:
```bash
pip install -r requirements.txt
```

5. Configurar variables de entorno:
- Copiar el archivo `.env.example` a `.env`
- Completar las variables de entorno necesarias

## Estructura del Proyecto

```
proyecto_asistente/
├── app/                    # Código principal de la aplicación
│   ├── api/               # Endpoints de la API
│   ├── core/              # Configuraciones centrales
│   ├── db/                # Configuración de base de datos
│   ├── models/            # Modelos de datos
│   ├── services/          # Servicios de negocio
│   └── utils/             # Utilidades generales
├── tests/                 # Tests unitarios y de integración
└── requirements.txt       # Dependencias del proyecto
```

## Uso

Para iniciar el servidor de desarrollo:

```bash
uvicorn app.main:app --reload
```

## Licencia

Este proyecto está bajo la licencia MIT. 
